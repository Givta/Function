services:
  - type: web
    name: givta-backend
    env: node
    region: oregon
    plan: free

    # These commands will be run from the 'rootDir' directory.
    buildCommand: npm install --include=dev && npm run build
    startCommand: npm start

    # The rootDir is '.' because render.yaml is already inside the 'Backend' directory.
    rootDir: .

    # Non-sensitive environment variables.
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: FIREBASE_PROJECT_ID
        value: givta-94cb8
      - key: ALLOWED_ORIGINS
        value: https://givta.app,https://givta-admin.netlify.app,exp://exp.host,http://localhost:8081,https://localhost:8081,http://10.0.0.0/8,http://172.16.0.0/12,http://192.168.0.0/16
      - key: ENABLE_WHATSAPP_BOT
        value: "true" # or "false"
      # Ensure devDependencies are installed during build so TypeScript types are available
      - key: NPM_CONFIG_PRODUCTION
        value: "false"
      - key: YARN_PRODUCTION
        value: "false"

      # --- Secrets Management ---
      # These 'fromSecret' keys reference secret variables you must create in the Render dashboard
      # under your service's 'Environment' tab.
      - key: JWT_SECRET
        fromSecret: JWT_SECRET # Name of the secret variable in Render
      - key: JWT_REFRESH_SECRET
        fromSecret: JWT_REFRESH_SECRET # Name of the secret variable in Render
      - key: PAYSTACK_SECRET_KEY
        fromSecret: PAYSTACK_SECRET_KEY # Name of the secret variable in Render
      - key: PAYSTACK_PUBLIC_KEY
        fromSecret: PAYSTACK_PUBLIC_KEY # Name of the secret variable in Render

      # Firebase credentials - Service account JSON
      - key: FIREBASE_SERVICE_ACCOUNT_JSON
        fromSecret: FIREBASE_SERVICE_ACCOUNT_JSON

      # This automatically connects to your Render Redis service.
      - key: REDIS_URL
        fromService:
          type: redis
          name: givta-redis
          property: connectionString
    healthCheckPath: /api/health
    # Auto-deploy is enabled, so any 'git push' to your main branch will trigger a new deployment.
    autoDeploy: true
